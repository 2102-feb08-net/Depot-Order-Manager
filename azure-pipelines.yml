# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  startupProject: 'StoreApp.Web'

# steps:
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'
# - script: dotnet test --configuration $(buildConfiguration)
#   displayName: 'dotnet test $(buildConfiguration)'
# - script: dotnet publish --configuration $(buildConfiguration) --output $(Build.ArtifactsStagingDirectory)/$(Build.BuildId).zip
#   displayName: 'dotnet publish $(buildConfiguration)'
  
# - task: ArchiveFiles@2
#   inputs:
#     rootFolderOrFile: '$(System.DefaultWorkingDirectory)/$(startupProject)/bin/$(buildConfiguration)/**/publish/'
#     includeRootFolder: true
#     archiveType: 'zip'
#     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#     replaceExistingArchive: true

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    condition: ne(variables['Build.Reason'], 'PullRequest')
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration $(buildConfiguration)
    - task: DotNetCoreCLI@2
      inputs:
        command: test
        arguments: '--configuration $(BuildConfiguration)'
        zipAfterPublish: true
    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactsStagingDirectory)/$(Build.BuildId).zip'
        zipAfterPublish: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: $(Build.ArtifactsStagingDirectory)/$(Build.BuildId).zip
        ArtifactName: drop

- stage: Deploy_to_dev_environment 
  displayName: 'Deploy to Dev'
  dependsOn: Build
  condition: and(succeeded('Build'), eq(variables['build.sourceBranch'], 'refs/heads/dev'))

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: AzureWebApp@1
            inputs: 
                azureSubscription: 'dev-service-connection'
                appName: 'dev-sp-app'
                appType: webAppLinux
                package: '$(Pipeline.Workspace)/**/*.zip'

- stage: Deploy_to_staging_environment 
  displayName: 'Deploy to Staging'
  dependsOn: Build
  condition: and(succeeded('Build'), eq(variables['build.sourceBranch'], 'refs/heads/staging'))

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'staging'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:
          steps:
           - download: current
             artifact: drop

           - task: AzureWebApp@1
             inputs: 
                azureSubscription: 'dev-service-connection'
                appName: 'dev-sp-app'
                appType: webAppLinux
                package: '$(Pipeline.Workspace)/**/*.zip'

- stage: Deploy_to_production_environment 
  displayName: 'Deploy to Production'
  dependsOn: Build
  condition: and(succeeded('Build'), eq(variables['build.sourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'production'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Free Trial(7b0f809c-844b-477f-b985-811ff1bab8fe)'
              appType: 'webApp'
              WebAppName: 'bewell-storeapp-revature'
              packageForLinux: '$(System.DefaultWorkingDirectory)/$(startupProject)/bin/$(buildConfiguration)/**/publish/*.zip'